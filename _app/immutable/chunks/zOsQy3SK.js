import"./DsnmJJEf.js";import"./69_IOA4Y.js";import{f as v,s,a as x,b as T,d as a,r as e,n as i}from"./CteKHfZA.js";import{a as p}from"./CByKOQ85.js";import{I as l}from"./DFwUARx1.js";var S=v(`<h1>How to Set Up a Dark/Light Mode Toggle with TailwindCSS V4</h1> <p><em>544 words</em><span class="status mx-1"></span><em>7 min read</em></p> <span class="badge badge-primary">tailwindcss</span> <span class="badge badge-primary">css</span> <span class="badge badge-primary">dark-mode</span> <span class="badge badge-primary">webdev</span> <h2 id="introduction" class="scroll-mt-20">Introduction</h2><p>With the release of TailwindCSS v4, setting up a dark and light mode toggle has never been easier. The framework now includes first-class support for theme variants, removing the need for the <code>dark:</code> variant prefix and simplifying the configuration. This guide will walk you through the process of creating a theme-aware toggle using just TailwindCSS and a few lines of JavaScript.</p> <h2 id="1-configuring-tailwind-css" class="scroll-mt-20">1. Configuring TailwindCSS</h2><p>First, you need to configure your <code>tailwind.config.ts</code> file to support theme switching. Tailwind v4 introduces a new <code>theme</code> property where you can define light and dark mode styles.</p> <p>Hereâ€™s how to set it up:</p> <figure class="highlighted-code relative"><label class="swap absolute top-2 right-2" data-code="import { defineConfig } from 'tailwindcss'  export default defineConfig({   content: [     './src/**/*.{html,js,svelte,ts}',   ],   theme: {     // For light mode (default)     light: {       colors: {         primary: '#1a202c',         background: '#ffffff',         text: '#4a5568',       },     },     // For dark mode     dark: {       colors: {         primary: '#ffffff',         background: '#1a202c',         text: '#a0aec0',       },     },     extend: {},   },   plugins: [], })" data-lang="ts"><input type="checkbox"/> <!> <!></label> <pre class="shiki shiki-themes github-light github-dark-dimmed line-clamp-20 overflow-auto" style="background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">import</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> &lbrace; defineConfig &rbrace; </span><span style="color:#D73A49;--shiki-dark:#F47067">from</span><span style="color:#032F62;--shiki-dark:#96D0FF"> 'tailwindcss'</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">export</span><span style="color:#D73A49;--shiki-dark:#F47067"> default</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB"> defineConfig</span><span style="color:#24292E;--shiki-dark:#F69D50">(&lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  content: [</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#96D0FF">    './src/**/*.&lbrace;html,js,svelte,ts&rbrace;'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  ]</span><span style="color:#24292E;--shiki-dark:#F69D50">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  theme: &lbrace;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#768390">    // For light mode (default)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    light: &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      colors: &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        primary: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#1a202c'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        background: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#ffffff'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        text: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#4a5568'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      &rbrace;,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    &rbrace;,</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#768390">    // For dark mode</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    dark: &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      colors: &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        primary: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#ffffff'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        background: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#1a202c'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">        text: </span><span style="color:#032F62;--shiki-dark:#96D0FF">'#a0aec0'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      &rbrace;,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    &rbrace;,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    extend: &lbrace;&rbrace;,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  &rbrace;</span><span style="color:#24292E;--shiki-dark:#F69D50">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  plugins: []</span><span style="color:#24292E;--shiki-dark:#F69D50">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#F69D50">&rbrace;)</span></span></code></pre></figure> <p>In this configuration, we define two themes: <code>light</code> and <code>dark</code>. Each theme has its own set of colors for <code>primary</code>, <code>background</code>, and <code>text</code>. When a theme is active, these colors will be applied automatically.</p> <h2 id="2-creating-the-html" class="scroll-mt-20">2. Creating the HTML</h2><p>Next, create the HTML structure for your theme toggle. We&#39;ll use a simple button that, when clicked, will switch between the two themes.</p> <figure class="highlighted-code relative"><label class="swap absolute top-2 right-2" data-code="&lt;button id=&quot;theme-toggle&quot; class=&quot;px-4 py-2 rounded-md bg-primary text-background&quot;>   Toggle Theme &lt;/button>  &lt;div class=&quot;p-8 bg-background text-text&quot;>   &lt;h1 class=&quot;text-2xl font-bold text-primary&quot;>Hello, TailwindCSS v4!&lt;/h1>   &lt;p>This is an example of a dark and light mode setup.&lt;/p> &lt;/div>" data-lang="html"><input type="checkbox"/> <!> <!></label> <pre class="shiki shiki-themes github-light github-dark-dimmed line-clamp-20 overflow-auto" style="background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">&#x3C;</span><span style="color:#22863A;--shiki-dark:#8DDB8C">button</span><span style="color:#6F42C1;--shiki-dark:#6CB6FF"> id</span><span style="color:#24292E;--shiki-dark:#ADBAC7">=</span><span style="color:#032F62;--shiki-dark:#96D0FF">"theme-toggle"</span><span style="color:#6F42C1;--shiki-dark:#6CB6FF"> class</span><span style="color:#24292E;--shiki-dark:#ADBAC7">=</span><span style="color:#032F62;--shiki-dark:#96D0FF">"px-4 py-2 rounded-md bg-primary text-background"</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  Toggle Theme</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#8DDB8C">button</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">&#x3C;</span><span style="color:#22863A;--shiki-dark:#8DDB8C">div</span><span style="color:#6F42C1;--shiki-dark:#6CB6FF"> class</span><span style="color:#24292E;--shiki-dark:#ADBAC7">=</span><span style="color:#032F62;--shiki-dark:#96D0FF">"p-8 bg-background text-text"</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  &#x3C;</span><span style="color:#22863A;--shiki-dark:#8DDB8C">h1</span><span style="color:#6F42C1;--shiki-dark:#6CB6FF"> class</span><span style="color:#24292E;--shiki-dark:#ADBAC7">=</span><span style="color:#032F62;--shiki-dark:#96D0FF">"text-2xl font-bold text-primary"</span><span style="color:#24292E;--shiki-dark:#ADBAC7">>Hello, TailwindCSS v4!&#x3C;/</span><span style="color:#22863A;--shiki-dark:#8DDB8C">h1</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  &#x3C;</span><span style="color:#22863A;--shiki-dark:#8DDB8C">p</span><span style="color:#24292E;--shiki-dark:#ADBAC7">>This is an example of a dark and light mode setup.&#x3C;/</span><span style="color:#22863A;--shiki-dark:#8DDB8C">p</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#8DDB8C">div</span><span style="color:#24292E;--shiki-dark:#ADBAC7">></span></span></code></pre></figure> <p>Notice that we are using the semantic color names we defined in our config (<code>bg-background</code>, <code>text-text</code>, <code>text-primary</code>). Tailwind will automatically resolve these to the correct color values based on the active theme.</p> <h2 id="3-adding-the-java-script" class="scroll-mt-20">3. Adding the JavaScript</h2><p>Finally, we need a bit of JavaScript to handle the theme switching logic. This script will listen for clicks on our toggle button and add or remove a <code>dark</code> class from the <code>&lt;html&gt;</code> element.</p> <figure class="highlighted-code relative"><label class="swap absolute top-2 right-2" data-code="document.addEventListener('DOMContentLoaded', () => {   const themeToggle = document.getElementById('theme-toggle');   const htmlElement = document.documentElement;    // Check for saved theme preference or use system preference   if (localStorage.getItem('theme') === 'dark' ||       (!('theme' in localStorage) &amp;&amp; window.matchMedia('(prefers-color-scheme: dark)').matches)) {     htmlElement.classList.add('dark');   }    themeToggle.addEventListener('click', () => {     htmlElement.classList.toggle('dark');          // Save the user's preference     if (htmlElement.classList.contains('dark')) {       localStorage.setItem('theme', 'dark');     } else {       localStorage.setItem('theme', 'light');     }   }); });" data-lang="javascript"><input type="checkbox"/> <!> <!></label> <pre class="shiki shiki-themes github-light github-dark-dimmed line-clamp-20 overflow-auto" style="background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">document.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">addEventListener</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'DOMContentLoaded'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">, () </span><span style="color:#D73A49;--shiki-dark:#F47067">=></span><span style="color:#24292E;--shiki-dark:#ADBAC7"> &lbrace;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">  const</span><span style="color:#005CC5;--shiki-dark:#6CB6FF"> themeToggle</span><span style="color:#D73A49;--shiki-dark:#F47067"> =</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> document.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">getElementById</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'theme-toggle'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">);</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">  const</span><span style="color:#005CC5;--shiki-dark:#6CB6FF"> htmlElement</span><span style="color:#D73A49;--shiki-dark:#F47067"> =</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> document.documentElement;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#768390">  // Check for saved theme preference or use system preference</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">  if</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> (localStorage.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">getItem</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'theme'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">) </span><span style="color:#D73A49;--shiki-dark:#F47067">===</span><span style="color:#032F62;--shiki-dark:#96D0FF"> 'dark'</span><span style="color:#D73A49;--shiki-dark:#F47067"> ||</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> </span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">     (</span><span style="color:#D73A49;--shiki-dark:#F47067">!</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'theme'</span><span style="color:#D73A49;--shiki-dark:#F47067"> in</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> localStorage) </span><span style="color:#D73A49;--shiki-dark:#F47067">&#x26;&#x26;</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> window.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">matchMedia</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'(prefers-color-scheme: dark)'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">).matches)) &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    htmlElement.classList.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">add</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'dark'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  &rbrace;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  themeToggle.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">addEventListener</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'click'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">, () </span><span style="color:#D73A49;--shiki-dark:#F47067">=></span><span style="color:#24292E;--shiki-dark:#ADBAC7"> &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    htmlElement.classList.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">toggle</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'dark'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    </span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#768390">    // Save the user's preference</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F47067">    if</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> (htmlElement.classList.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">contains</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'dark'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">)) &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      localStorage.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">setItem</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'theme'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">, </span><span style="color:#032F62;--shiki-dark:#96D0FF">'dark'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    &rbrace; </span><span style="color:#D73A49;--shiki-dark:#F47067">else</span><span style="color:#24292E;--shiki-dark:#ADBAC7"> &lbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">      localStorage.</span><span style="color:#6F42C1;--shiki-dark:#DCBDFB">setItem</span><span style="color:#24292E;--shiki-dark:#ADBAC7">(</span><span style="color:#032F62;--shiki-dark:#96D0FF">'theme'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">, </span><span style="color:#032F62;--shiki-dark:#96D0FF">'light'</span><span style="color:#24292E;--shiki-dark:#ADBAC7">);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">    &rbrace;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">  &rbrace;);</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ADBAC7">&rbrace;);</span></span></code></pre></figure> <p>This script does the following:</p> <ol><li>It checks for a theme preference saved in <code>localStorage</code>.</li> <li>If no preference is found, it respects the user&#39;s operating system setting (<code>prefers-color-scheme</code>).</li> <li>When the button is clicked, it toggles the <code>dark</code> class on the <code>&lt;html&gt;</code> element.</li> <li>It saves the user&#39;s choice to <code>localStorage</code> for future visits.</li></ol> <h2 id="conclusion" class="scroll-mt-20">Conclusion</h2><p>And that&#39;s it! You now have a fully functional dark and light mode toggle powered by TailwindCSS v4. By leveraging the new theme capabilities, you can create clean, maintainable, and user-friendly theme experiences with minimal effort. This plugin-free approach simplifies your setup and keeps your project lean.</p>`,1);function H(u){function o(n){const f=n.parentElement,w=f?.getAttribute("data-code")??"";f?.getAttribute("data-lang"),n.addEventListener("click",L=>{navigator.clipboard.writeText(w),n.disabled=!0,setTimeout(()=>{n.disabled=!1,n.checked=!1},1e3)})}var c=S(),r=s(x(c),20),d=a(r),k=a(d);p(k,()=>o);var h=s(k,2);l(h,{class:"swap-on inline-block",icon:"openmoji:check-mark",width:"24",height:"24"});var B=s(h,2);l(B,{class:"swap-off inline-block",icon:"solar:copy-broken",width:"24",height:"24"}),e(d),i(2),e(r);var t=s(r,7),A=a(t),y=a(A);p(y,()=>o);var D=s(y,2);l(D,{class:"swap-on inline-block",icon:"openmoji:check-mark",width:"24",height:"24"});var b=s(D,2);l(b,{class:"swap-off inline-block",icon:"solar:copy-broken",width:"24",height:"24"}),e(A),i(2),e(t);var m=s(t,7),g=a(m),C=a(g);p(C,()=>o);var F=s(C,2);l(F,{class:"swap-on inline-block",icon:"openmoji:check-mark",width:"24",height:"24"});var E=s(F,2);l(E,{class:"swap-off inline-block",icon:"solar:copy-broken",width:"24",height:"24"}),e(g),i(2),e(m),i(7),T(u,c)}export{H as default};
